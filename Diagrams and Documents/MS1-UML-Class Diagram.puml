@startuml
/'
Private   :  -
Protected :  #
public    :  + 
'/
abstract Entity
Entity : #double health
Entity : #double fastSpeed 
Entity : #double slowSpeed 
Entity : #string spriteImage

Entity : +abstract void move()
Entity : +abstract void attack()

'--- God Class ---'
class GameManager
GameManager -- PlayerController
GameManager -- Entity
GameManager -- BulletFactory
GameManager -- Stage
GameManager : -Timer
GameManager : -Score
GameManager : -EntityCount
GameManager : -updateTick()
GameManager -- EnemyFactory
GameManager : -spawnEnemy()
GameManager : -updateLives()
GameManager : -clearScreen()
GameManager : -updateStage()

class HitboxManager
HitboxManager -> GameManager
HitboxManager : -Update()
class EntityManager
EntityManager -> GameManager
EntityManager : -Update()
class SoundManager
SoundManager -> GameManager
class HealthManager
GameManager <- HealthManager
class SpawnManager
GameManager <- SpawnManager


'--- Player Stuff ---'
class Player 
Entity <|-- Player 
Player : #int life
Player : #void getInput
Player : -Position
Player : -shoot()
Player : -move()



class PlayerController
PlayerController -- Player
PlayerController : -Scheme ControlScheme 
PlayerController : -void sendInput()
'--- Enemy Stuff ---'
abstract Enemy
Entity <|-- Enemy
Enemy : -Script MovementScript
Enemy : -Script ShootingPattern

class Drone
Enemy <|-- Drone

class Soldier
Enemy <|-- Soldier

abstract Boss
Enemy <|-- Boss

class MidBoss
Boss <|-- MidBoss

class FinalBoss
Boss <|-- FinalBoss

'--- Bullet Stuff ---'
abstract Bullet
BulletFactory -- Bullet
Bullet : -int Damage
Bullet : -int Speed

class PlayerBullet
Bullet <|-- PlayerBullet

class EnemyBullet
Bullet <|-- EnemyBullet

class BossBullet
Bullet <|-- BossBullet

'--- Factory Stuff ---'
class BulletFactory
BulletFactory : -Bullet spawn()

class EnemyFactory
EnemyFactory -- Enemy
EnemyFactory : -Enemy spawn()

'--- Stage Stuff ---'
class Stage
Stage : -string background
Stage : #int timeInSeconds 

@enduml